const express = require('express');
const router = express.Router();
const { body } = require('express-validator');
const carController = require('../controllers/carController');
const bookingController = require('../controllers/bookingController');
const authMiddleware = require('../middleware/auth');
const upload = require('../config/multer');

// GET - Get all cars (public endpoint)
router.get('/', (req, res) => {
  if (typeof carController.getCars === 'function') {
    return carController.getCars(req, res);
  } else if (typeof carController.getAllCars === 'function') {
    return carController.getAllCars(req, res);
  } else {
    return res.status(501).json({ message: 'Get cars functionality not implemented' });
  }
});

// GET - Get car by ID (public endpoint)
router.get('/:id', (req, res) => {
  if (typeof carController.getCarById === 'function') {
    return carController.getCarById(req, res);
  } else {
    return res.status(501).json({ message: 'Get car by ID functionality not implemented' });
  }
});

// POST - Create a new car listing
router.post(
  '/',
  authMiddleware.authenticate,
  authMiddleware.isHost,
  upload.single('image'),
  [
    body('brand').notEmpty().withMessage('Brand is required'),
    body('model').notEmpty().withMessage('Model is required'),
    body('year').isInt({ min: 1900, max: new Date().getFullYear() + 1 }).withMessage('Valid year is required'),
    body('plate').notEmpty().withMessage('Plate number is required'),
    body('color').notEmpty().withMessage('Color is required'),
    body('mileage').isInt({ min: 0 }).withMessage('Valid mileage is required'),
    body('price_per_day').isFloat({ min: 0 }).withMessage('Valid price per day is required'),
    body('location').notEmpty().withMessage('Location is required'),
    body('availability_start').isDate().withMessage('Valid availability start date is required'),
    body('availability_end').isDate().withMessage('Valid availability end date is required')
  ],
  (req, res) => {
    if (typeof carController.createCar === 'function') {
      return carController.createCar(req, res);
    } else {
      return res.status(501).json({ message: 'Create car functionality not implemented' });
    }
  }
);

// Get car availability
router.get("/:carId/availability", bookingController.getCarAvailability);

module.exports = router;
