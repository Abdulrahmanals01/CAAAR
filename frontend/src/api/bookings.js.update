// Add these functions to your bookings.js API file

// Mark booking as completed
export const completeBooking = async (bookingId) => {
  try {
    const token = localStorage.getItem('token');
    if (!token) {
      return { success: false, error: 'Authentication required' };
    }
    
    const config = {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    };
    
    const response = await axios.put(
      `${API_URL}/api/bookings/${bookingId}/complete`,
      {},
      config
    );
    
    return { success: true, data: response.data };
  } catch (error) {
    console.error('Error completing booking:', error);
    return {
      success: false,
      error: error.response?.data?.message || 'Error completing booking'
    };
  }
};

// Start trip (for renter)
export const startTrip = async (bookingId) => {
  try {
    const token = localStorage.getItem('token');
    if (!token) {
      return { success: false, error: 'Authentication required' };
    }
    
    const config = {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    };
    
    const response = await axios.put(
      `${API_URL}/api/bookings/${bookingId}/start`,
      {},
      config
    );
    
    return { success: true, data: response.data };
  } catch (error) {
    console.error('Error starting trip:', error);
    return {
      success: false,
      error: error.response?.data?.message || 'Error starting trip'
    };
  }
};

// End trip early (for host)
export const endTripEarly = async (bookingId) => {
  try {
    const token = localStorage.getItem('token');
    if (!token) {
      return { success: false, error: 'Authentication required' };
    }
    
    const config = {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    };
    
    const response = await axios.put(
      `${API_URL}/api/bookings/${bookingId}/end-early`,
      {},
      config
    );
    
    return { success: true, data: response.data };
  } catch (error) {
    console.error('Error ending trip early:', error);
    return {
      success: false,
      error: error.response?.data?.message || 'Error ending trip early'
    };
  }
};

// Upload inspection photos
export const uploadInspectionPhotos = async (bookingId, type, photos) => {
  try {
    const token = localStorage.getItem('token');
    if (!token) {
      return { success: false, error: 'Authentication required' };
    }
    
    const formData = new FormData();
    photos.forEach(photo => {
      formData.append('photos', photo);
    });
    
    const config = {
      headers: {
        'Content-Type': 'multipart/form-data',
        'Authorization': `Bearer ${token}`
      }
    };
    
    const response = await axios.post(
      `${API_URL}/api/bookings/${bookingId}/photos/${type}`,
      formData,
      config
    );
    
    return { success: true, data: response.data };
  } catch (error) {
    console.error(`Error uploading ${type} photos:`, error);
    return {
      success: false,
      error: error.response?.data?.message || `Error uploading ${type} photos`
    };
  }
};
